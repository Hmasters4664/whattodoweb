# Generated by Django 2.2.4 on 2019-09-14 13:11

import WhatToDo.validators
import autoslug.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, validators=[WhatToDo.validators.validate_characters])),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='name')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='WhatToDo.Category')),
            ],
            options={
                'verbose_name_plural': 'categories',
                'unique_together': {('slug', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[WhatToDo.validators.validate_characters])),
                ('description', models.TextField(validators=[WhatToDo.validators.validate_characters])),
                ('url', models.CharField(blank=True, max_length=50, verbose_name='Ticket Purchase URL')),
                ('picture', models.ImageField(blank=True, default='events/default_events.jpg', null=True, upload_to='events')),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('lastModified', models.DateTimeField(auto_now_add=True)),
                ('startDate', models.DateTimeField(verbose_name='Start Date and Time')),
                ('endDate', models.DateTimeField(verbose_name='End Date and Time')),
                ('TicketPrice1', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, validators=[WhatToDo.validators.check_negative_number])),
                ('TicketPrice2', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, validators=[WhatToDo.validators.check_negative_number])),
                ('TicketPrice3', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, validators=[WhatToDo.validators.check_negative_number])),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='WhatToDo.Category')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Organiser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[WhatToDo.validators.validate_characters])),
                ('phone', models.CharField(max_length=12, validators=[WhatToDo.validators.validate_characters])),
                ('facebookurl', models.CharField(max_length=50)),
                ('twitterhandle', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('name', models.TextField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=30)),
                ('profile_picture', models.ImageField(blank=True, default='profile/avatar.jpg', null=True, upload_to='profile')),
                ('city', models.CharField(blank=True, max_length=30)),
                ('province', models.CharField(blank=True, max_length=30, verbose_name='provice/state')),
                ('birth_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[WhatToDo.validators.validate_characters])),
                ('addressline1', models.CharField(max_length=100, validators=[WhatToDo.validators.validate_characters])),
                ('addressline2', models.CharField(max_length=100, validators=[WhatToDo.validators.validate_characters])),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('country', models.CharField(max_length=50, validators=[WhatToDo.validators.validate_characters])),
                ('province', models.CharField(max_length=50, validators=[WhatToDo.validators.validate_characters], verbose_name='provice/state')),
                ('city', models.CharField(max_length=100, validators=[WhatToDo.validators.validate_characters])),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Friends'), (1, 'Request'), (2, 'Blocked')], default=1)),
                ('uuid', models.UUIDField(editable=False)),
                ('from_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_people', to='WhatToDo.Profile')),
                ('to_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_people', to='WhatToDo.Profile')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='relationships',
            field=models.ManyToManyField(related_name='related_to', through='WhatToDo.Relationship', to='WhatToDo.Profile'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.IntegerField(choices=[(1, 'General'), (0, 'Friend')], default=1)),
                ('action', models.CharField(max_length=150)),
                ('read', models.BooleanField(default=False, verbose_name='read')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actioner', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=150)),
                ('opened', models.BooleanField(default=False, verbose_name='opened')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='WhatToDo.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EventComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=datetime.datetime(2019, 9, 14, 13, 11, 23, 346234, tzinfo=utc))),
                ('approved_comment', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='WhatToDo.Event')),
            ],
            options={
                'ordering': ['-created_date'],
                'abstract': False,
            },
        ),
    ]
